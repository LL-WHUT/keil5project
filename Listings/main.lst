C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2023 20:03:01 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

*** WARNING C500 IN LINE 1 OF main.c: SERIAL NUMBER EXPIRED
   1          #include <include/ling.h>
   2          sbit DQ = P3 ^ 7;
   3          u8 temp[10] = {'0', '0', '.', '0', '0', '#'};
   4          u8 test[10] = {'0', '0', '0', '0', '0', '0', '0', '0', '#'};
   5          u16 wendu = 0;
   6          u8 num = 0x01;
   7          char i = 8;
   8          
   9          void Delay10us() //@11.0592MHz
  10          {
  11   1          unsigned char i;
  12   1      
  13   1          i = 2;
  14   1          while (--i)
  15   1              ;
  16   1      }
  17          
  18          void Delay15us() //@11.0592MHz
  19          {
  20   1          unsigned char i;
  21   1      
  22   1          i = 4;
  23   1          while (--i)
  24   1              ;
  25   1      }
  26          
  27          void Delay40us() //@11.0592MHz
  28          {
  29   1          unsigned char i;
  30   1      
  31   1          _nop_();
  32   1          i = 15;
  33   1          while (--i)
  34   1              ;
  35   1      }
  36          
  37          void Delay60us() //@11.0592MHz
  38          {
  39   1          unsigned char i;
  40   1      
  41   1          i = 25;
  42   1          while (--i)
  43   1              ;
  44   1      }
  45          
  46          void Delay68us() //@11.0592MHz
  47          {
  48   1          unsigned char i;
  49   1      
  50   1          _nop_();
  51   1          i = 28;
  52   1          while (--i)
  53   1              ;
C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2023 20:03:01 PAGE 2   

  54   1      }
  55          
  56          void Delay500us() //@11.0592MHz
  57          {
  58   1          unsigned char i;
  59   1      
  60   1          _nop_();
  61   1          i = 227;
  62   1          while (--i)
  63   1              ;
  64   1      }
  65          
  66          u8 Init_ds18b20(void)
  67          {
  68   1          u8 x = 0;
  69   1          DQ = 1; // DQ复位
  70   1          _nop_();
  71   1          _nop_();
  72   1          DQ = 0; // 拉低DQ
  73   1          Delay500us();
  74   1          DQ = 1; // 拉高总线
  75   1          Delay40us();
  76   1          x = DQ; // 稍做延时后，如果x=0则初始化成功，x=1则初始化失败
  77   1          return x;
  78   1      }
  79          
  80          void WriteOmeChar(u8 dat)
  81          {
  82   1          u8 i = 0;
  83   1          for (i = 8; i < 8; i++)
  84   1          {
  85   2              DQ = 0; // 拉低电平并延时15us，告诉ds18b20要写数据了
  86   2              Delay15us();
  87   2              DQ = dat & 0x01; // 由低位到高位写数据
  88   2              Delay68us();     // 延时为下次写数据做准备
  89   2              DQ = 1;          // 释放总线
  90   2              dat >>= 1;
  91   2          }
  92   1      }
  93          
  94          u8 ReadOneChar(void)
  95          {
  96   1          // u8 i=0;
  97   1          // u8 dat=0;
  98   1          // for(i=0;i<8;i++)
  99   1          // {
 100   1          //     DQ=0;
 101   1          //     _nop_();
 102   1          //     dat>>=1;
 103   1          //     DQ=1;
 104   1          //     Delay60us();
 105   1          //     if(DQ)
 106   1          //     {
 107   1          //         dat|=0x80;
 108   1          //     }
 109   1          //     _nop_();
 110   1          // }
 111   1          // return dat;
 112   1          u8 i=0;
 113   1          u8 dat = 0;
 114   1          for (i = 0; i < 8; i++)
 115   1          {
C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2023 20:03:01 PAGE 3   

 116   2              DQ = 0; // 先将总线拉低1us
 117   2              _nop_();_nop_();
 118   2              DQ = 1; // 然后释放总线
 119   2              _nop_();
 120   2              _nop_();
 121   2              if (DQ)
 122   2                  dat = dat | 0x80; // 每次读一位
 123   2              dat = dat >> 1;       // 从最低位开始读
 124   2              Delay60us();         // 读取完之后等待60us再接着读取下一个数
 125   2          }
 126   1          return dat;
 127   1      }
 128          
 129          u8 ReadAndCaculateTemprature(void)
 130          {
 131   1          u8 th = 0; // 高八位
 132   1          u8 tl = 0; // 低八位
 133   1          u16 t;     // 转换后温度
 134   1          Init_ds18b20();
 135   1          WriteOmeChar(0xCC); // skipROM命令
 136   1          WriteOmeChar(0x44); // 启动温度转换
 137   1          delayxms(800);      // 等待转换完成
 138   1          Init_ds18b20();
 139   1          WriteOmeChar(0xCC); // skipROM命令
 140   1          WriteOmeChar(0xBE); // 读取温度寄存器命令
 141   1          tl = ReadOneChar(); // 读取低八位
 142   1          th = ReadOneChar(); // 读取高八位
 143   1          // if(th>0x08)//负数情况
 144   1          // {
 145   1          //     th=~th+1;//取反加一
 146   1          //     th=-th;
 147   1          // }
 148   1          // t=th;
 149   1          // t<<=8;
 150   1          // t=t|tl;
 151   1          return tl;
 152   1      }
*** WARNING C280 IN LINE 133 OF main.c: 't': unreferenced local variable
 153          void main()
 154          {
 155   1          num = 0x01;
 156   1          wendu = ReadAndCaculateTemprature();
 157   1          // temp[0]=((wendu/1000)%10+'0');
 158   1          // temp[1]=((wendu/100)%10+'0');
 159   1          // temp[3]=((wendu/10)%10+'0');
 160   1          // temp[4]=(wendu%10+'0');
 161   1          // Smg_display(test,500);
 162   1          for (i = 7; i >= 0; i--)
 163   1          {
 164   2              if (wendu & num)
 165   2              {
 166   3                  test[i] = '1';
 167   3              }
 168   2              else
 169   2              {
 170   3                  test[i] = '0';
 171   3              }
 172   2              num = num << 1;
 173   2          }
 174   1          Smg_display(test, 500);
 175   1      }

C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2023 20:03:01 PAGE 4   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    967    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24      52
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
